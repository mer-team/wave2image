name: wave2image Node.js CI/CD

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:    
    - name: Setup RabbitMQ Image
      uses: mer-team/rabbitmq-mng-action@v1.2
      with:
        RABBITMQ_USER: 'merUser'
        RABBITMQ_PASS: 'passwordMER'
        RABBITMQ_PORT: 5672
        RABBITMQ_MNG_PORT: 15672
        RABBITMQ_TAG: '3-management-alpine'
    
    - name: Create Audio Folder
      uses: 1arp/create-a-file-action@0.2
      with:
        path: '$GITHUB_WORKSPACE/Audios'
        file: 'file.txt'
        content: a
    - name: Create Soundwaves Folder
      uses: 1arp/create-a-file-action@0.2
      with:
        path: '$GITHUB_WORKSPACE/Soundwaves'
        file: 'file.txt'
        content: a

    - name: Run vidExtractor Project
      run: docker run -d -e TIME=10 -e USER=merUser -e PASS=passwordMER -e URL=http://localhost:15672/api/whoami --net=host -v $GITHUB_WORKSPACE/Audios:/vidExtractor/Audios merteam/vidextractor:latest

    - name: Checkout wave2image Project
      uses: actions/checkout@v2
    
    - name: Build Local wave2image Docker Image
      run: docker build -t wave2image:latest .

    - name: Run Local wave2image Docker Image
      run: docker run -d -e TIME=10 -e USER=merUser -e PASS=passwordMER -e URL=http://localhost:15672/api/whoami --net=host -v $GITHUB_WORKSPACE/Audios:/Audios -v $GITHUB_WORKSPACE/Soundwaves:/Soundwaves wave2image:latest

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install --also=dev
      working-directory: src
    #- name: Runnning build
    #  run: npm run build --if-present
    - name: Running tests
      run: npm test
      working-directory: src
      env:
        CI: true